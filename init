# -*- coding: utf-8 -*-
from flask.globals import  request
from flaskext.cache import Cache
import os
from flask import Flask, send_from_directory, render_template
from flaskext.login import LoginManager

app = Flask(__name__)
app.config.from_object("websiteconfig")

#
# Database
#
from gitcorp.data.db import db_session 
from gitcorp.models.account import User

#
# Cache
#
cache = Cache()
cache.init_app(app)

#
# Login
#
login_manager = LoginManager()
login_manager.setup_app(app)
login_manager.login_view = "general.login"
login_manager.login_message = u"这个页面需要登录后才能访问"

@login_manager.user_loader
@cache.memoize(10)
def load_user(user_id):
    print request.path
    return db_session.query(User).get(user_id)


#
# Blueprints
#
from gitcorp.views import general
from gitcorp.views import account
from gitcorp.views import repo
from gitcorp.views import test

app.register_blueprint(general.mod)
app.register_blueprint(account.mod)
app.register_blueprint(repo.mod)
app.register_blueprint(test.mod)


#
# 
#

@app.errorhandler(404)
def not_found(error):
    return render_template('404.html'), 404

@app.teardown_request
def close_db_session(exception):
    db_session.remove()

@app.route("/favicon.ico")
def favicon():
    return send_from_directory(os.path.join(app.root_path, "static"),
        "favicon.ico", mimetype="image/vnd.microsoft.icon")


#
#
#
@app.context_processor
def inject_html_id():
    return dict(html_id=HtmlId())

class HtmlId:
    serial = 0
    def next(self):
        self.serial += 1
        return str(self)

    def __repr__(self):
        return "html_%d" % self.serial
